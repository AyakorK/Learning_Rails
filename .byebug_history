q
comment
@comment
q
comment
article
c
current_user
@user
user
@comment
q
params
params.require(:comment).permit(:body, :stars, :status).merge(user_id: current_user.id)
params
params.require(:comment).permit(:body, :stars, :status).merge(user_id: current_user.id)
q
y
params.require(:comment).permit(:body, :stars, :status).merge(user_id: current_user.id)
q
 params.require(:comment).permit(:commenter, :stars, :status, :user_id, :body)
 params.require(:comment).permit(:commenter, :stars, :status: :user_id, :body)
 params.require(:comment).permit(:stars)
 params.require(:comment).permit(:commenter)
 params.require(:comment).permit
 params.require(:comment)
 params.require(:comment).permit(:commenter, :body, :stars, :status, :user_id)
q
@comment
c
params.require(:comment).permit(:commenter, :body, :stars, :status, :user_id)
params
q
params.require(:comment).permit(:commenter, :body, :stars, :status, :user_id)
params.require(:comment):permit(:commenter, :body, :stars, :status, :user_id)
params.require(:comment):permit(:commenter, :body, :stars, :status)
params.require(:comment):permit
params.require(:comment)
q
post article_comments_path(article), params: { comment: params }
params
param
q
post article_comments_path(article), params: { comment: params }
q
quit
comment_params
params
why
@comment
c
@comment
@commenter
q
@comment
comment
ddddddxdxxxdxxdxddxddxdxdxdxdxdxdxdxdxdx
sssssssssdddddd
@comment
c
q
params
q
comment_params
params
q
params
params.require(:comment).permit(:user_id, :commenter, :stars, :body, :status)
params
q
comment_params
params
@comment
c
@comment
@commenter
c
comment_params
params
@comment
q
@comment
c
params
q
params
q
params
c
params
let(:status) { 'fake' }
params
q
params
q
article_params
@article
c
@article
q
current_user.id
c
q
current_user.id
@article
c
params
c
@article
c
params
article
q
@article
c
params
q
@article.user_id
@article.id
@article
c
params
c
@article
c
params
q
@article
c
params
q
@article
c
@article
article_params
params
c
user
use
article
q
user
article
q
user
article
user
article
q
article
user
q
article.user_id
article
user
q
user.id
article
user
article
q
user
article
user
article
q
@article
@article = Article.new(article_params)
@article
article_params
q
Article.new(:params)
Article.new(params)
Article.new
article
q
Y
Q
current_user
@article
@user
user
article_params
@article = Article.new(article_params)
@article = Article.new(article_params
q
q@article = Article.new(article_params)
@article = Article.new(article_params)
Article.new(article_params)
q
Y
@article = Article.new(article_params)
    @article = Article.new(article_params)
params.require    @article = Article.new(article_params)(:article).permit(:title, :body, :status, :user_id)
params.permitted?
params.require(:article).permit(:title, :body, :status, :user_id)
params.permitted?
params.permitted
params.require(:article).permit(:title, :body, :status, :user_id)
params.require(@article).permit(:title, :body, :status, :user_id)
params
q
params.require(@article).permit(:title, :body, :status, :user_id)
params
param
    params.require(@article).permit(:title, :body, :status, :user_id)
q
params.require(:article).permit(:id, :title, :body, :status, :user_id)
params.require(:article)
params.require(:article).permit(:title, :body, :status, :user_id)
params
q
@article.user_id == current_user.id
@article = Article.new(article_params)
@article = Article.new(params)
article_params
@article
q
params
article_params
params
@article.user_id == current_user.id
@article
c
q
current_user.id == article.id
article
q
article
q
article
q
user_is
article
q
article
user
q
@article.title
current_user
@article
article
q
user
User is not blank
user
article
q
article
user
q
User.all
Article.all
article
user
article
